/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'io.freefair.lombok' version '8.2.2'
	id 'signing'
	id 'maven-publish'
	id "org.owasp.dependencycheck" version "8.4.0"
}

group = 'com.siliconmtn'

/*
 * For snapshot publishing, use: version = n.n.n.n-SNAPSHOT
 * For 'release' publishing, use: version = n.n.n
 *
 */
version = '2.0.0-SNAPSHOT'
//version = '2.0.0'

sourceCompatibility = '17'
archivesBaseName = "spacelibs-java"

repositories {
    // Use Maven Central for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

dependencies {
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'commons-beanutils:commons-beanutils:1.9.4'
    implementation 'commons-io:commons-io:2.13.0'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.13.19'

	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'
	implementation 'org.apache.poi:poi:5.2.3'

	// Spring Boot (Starters -> https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-starter)
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'org.springframework.security:spring-security-crypto:6.1.3'
	implementation 'org.hibernate:hibernate-validator:8.0.1.Final'

	// XSS content validation/filtering
	implementation 'org.owasp.encoder:encoder:1.2.3'
	implementation 'org.jsoup:jsoup:1.16.1'
	implementation 'com.auth0:java-jwt:4.4.0'

	// AWS Imports for the S3 Buckets
	implementation 'software.amazon.awssdk:bom:2.19.8'
	implementation 'software.amazon.awssdk:s3:2.19.8'
	implementation 'software.amazon.awssdk:sns:2.19.8'

    // Testing
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-core:5.2.0'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation('org.springframework.boot:spring-boot-starter-test'){
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	//OpenAPI3 (Swagger)
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

	// https://mvnrepository.com/artifact/org.apache.pulsar/pulsar-client
	implementation 'org.apache.pulsar:pulsar-client:3.1.0'

}

// Prevent Spring Boot from looking for a main()
bootJar {
	enabled = false
}
jar {
	enabled = true
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
    useJUnitPlatform()
}

jacocoTestReport {
	reports {
        xml.required = true
        csv.required = false
        html.required = true
	}
	dependsOn test
}

// Set the source path to the delombok source so the javadocs will be built properly
javadoc {
	source = delombok.sourcepath
	javadoc.options.addStringOption('Xdoclint:all', '-quiet')
	options.tags = ["updates", "updates:"]
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
	publications {
		spaceLibsJava(MavenPublication) {
			artifactId = 'spacelibs-java'
      		from components.java
      		versionMapping {
      			usage('java-api') {
      				fromResolutionOf('runtimeClasspath')
		        }
		        usage('java-runtime') {
		        	fromResolutionResult()
		        }
		    }
			pom {
				name = "spacelibs-java"
			    description = "A libary of useful tools and helper objects."
			    url = "https://github.com/smtadmin/spacelibs-java"
			    licenses {
			    	license {
			        	name = "MIT License"
			            url = "https://opensource.org/licenses/mit-license.php"
			        }
			    }
			    developers {
			    	developer {
			        	id = "etewa"
			        	name = "James Camire"
			        	email = "james@siliconmtn.com"
			        	organization = "Silicon Mountain Technologies, Inc."
			        	organizationUrl = "https://www.siliconmtn.com"
			        }
			    }
			    scm {
			    	connection = "scm:git:git://github.com/smtadmin/spacelibs-java.git"
			    	developerConnection = "scm:git:ssh://github.com:smtadmin/spacelibs-java.git"
			    	url = "https://github.com/smtadmin/spacelibs-java/tree/main"
			    }
			}
		}
	}
  repositories {
      maven {
          credentials {
              username project.ossrhUsername
              password project.ossrhPassword
          }
          if (project.version.endsWith("-SNAPSHOT")) {
              url = "https://oss.sonatype.org/content/repositories/snapshots/"
          } else {
              //url = "$buildDir/repos/releases"
              url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
          }
      }
  }
}

signing {
    sign publishing.publications.spaceLibsJava
}
